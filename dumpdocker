#!/bin/bash
#
# dumpdocker
# - creates docker image based on tar file for analysis of crash dump 
# 
# Last updated at Mon Aug  4 21:45:21 KST 2014

check_links() {
	local file="$1"
	
	if [[ -L $file ]]; then
		echo $file 
		readlink -f $file
	else
		echo $file
	fi
}

check_path() {
	local command="$1"

	which $command
}

find_shlibs() {
	local file="$1"

	check_links $file
	ldd_files=$(ldd $file | grep "\/" | awk '{if ($2=="=>") print $3; if ($2!="=>") print $1}')
	for shlibs in $ldd_files
	do
		check_links $shlibs
	done
}

file="$1"

# find shared libraries for the given file
found_shlibs+=$(find_shlibs $file) 

# basic commands for docker image
basic_cmds="bash ls cp grep diff tail head vi bc"

for commands in $(echo $basic_cmds)
do
	found_shlibs+=$(find_shlibs $(check_path $commands))
done

# gather the shared libraries and binaries related with gdb
gdb_bin=$(which gdb)
found_shlibs+=$(find_shlibs $gdb_bin)

# check the files which has opened by gdb
strace $gdb_bin >/dev/null 2>/tmp/d.$$ <<EOF
quit
EOF

gdb_files=$(grep "^open(\"" /tmp/d.$$ | awk -F'"' '{print $2}')
for files in $gdb_files
do
	if [ -f $files ]; then
		if [ -x $files ]; then
			found_shlibs+=$(find_shlibs $files)
		fi
		found_shlibs+=$files
	fi
done

echo $found_shlibs | tr " " "\n" | sort -u

exit 0
