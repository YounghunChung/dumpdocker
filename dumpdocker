#!/bin/bash
#
# dumpdocker
# - creates docker image based on tar file for analysis of crash dump 
# 
# requirements:
# - gdb
#
# usage:
# dumpdocker </path/executable> </path/core>
#
# Last updated at Tue Aug  5 17:08:32 KST 2014
#set -x

DATE=$(date +%Y%m%d%H%M)
UNAME=$(uname -n)
BINNAME=$(basename $1)

check_links() {
	# check the file whether it is a symbolic link file or not
	local file="$1"
	
	if [[ -L $file ]]; then
		echo $file 
		readlink -f $file
	else
		echo $file
	fi
}

check_path() {
	# find the path of the given file
	local command="$1"

	which $command
}

find_shlibs() {
	# find the list of shared libraries and binaries for the given file
	local file="$1"

	check_links $file
	ldd_files=$(ldd $file | grep "\/" | awk '{if ($2=="=>") print $3; if ($2!="=>") print $1}')
	for shlibs in $ldd_files
	do
		check_links $shlibs
	done
}

file="$1"
core="$2"

# find shared libraries for the given file from info shared command of gdb
found_shlibs+=" "
found_shlibs+=$(check_links $file) 

gdb $file $core >/dev/null <<EOF
set height 0
set logging file /tmp/d.gdb.$$
set logging on
info shared
set logging off
quit
EOF

for sharedlibs in $(grep "\/" /tmp/d.gdb.$$ | awk -F' /' '{print "/"$2}')
do
	found_shlibs+=" "
	found_shlibs+=$(check_links $sharedlibs)
done

# basic commands for docker image
basic_cmds="bash ls cp grep cat diff tail head vi bc"

for commands in $(echo $basic_cmds)
do
	found_shlibs+=" "
	found_shlibs+=$(find_shlibs $(check_path $commands))
done

# gather the shared libraries and binaries related with gdb
gdb_bin=$(which gdb)
found_shlibs+=" "
found_shlibs+=$(find_shlibs $gdb_bin)

# get the list of gdb package contents
dpkg_bin=$(which dpkg 2>/dev/null)
rpm_bin=$(which rpm 2>/dev/null)

if [ "$dpkg_bin" != "" ] && [ -x $dpkg_bin ]; then
	$dpkg_bin -l gdb >/dev/null 2>&1
	if [ $? -eq 0 ]; then
		$dpkg_bin -L gdb > /tmp/d.pkg.$$ 2>/dev/null
	else
		echo "Couldn't find gdb package."
		exit 1
	fi
elif [ "$rpm_bin" != "" ] && [ -x $rpm_bin ]; then
	$rpm_bin -q gdb	>/dev/null 2>&1
	if [ $? -eq 0 ]; then
		$rpm_bin -qvl gdb | awk '{print $9}' > /tmp/d.pkg.$$ 2>/dev/null
	else
		echo "Couldn't find gdb package."
		exit 1
	fi
else
	echo "Couldn't find dpkg and rpm binary."
	exit 1
fi

for pkg_files in $(cat /tmp/d.pkg.$$)
do
	if [ -f $pkg_files ]; then
		found_shlibs+=" "
		found_shlibs+="$pkg_files"
	fi
done

# check the files which has opened by gdb
strace $gdb_bin >/dev/null 2>/tmp/d.$$ <<EOF
quit
EOF

gdb_files=$(grep "^open(\"" /tmp/d.$$ | egrep -iv "no such file|\/dev|\/proc|\/tmp" | awk -F'"' '{print $2}')
for files in $gdb_files
do
	if [ -f $files ]; then
		if [ -x $files ]; then
			found_shlibs+=" "
			found_shlibs+=$(find_shlibs $files)
		fi
		found_shlibs+=" "
		found_shlibs+=$files
	fi
done

# gather the files of list and archive them into tar file for docker image
echo $found_shlibs | tr " " "\n" | sort -u | xargs tar cvf ${UNAME}.${BINNAME}.${DATE}.tar 

# remove the temporary files
rm /tmp/d.*.$$
exit 0
